layout(vertices=3) out;		//3 vertices for triangles

in vec2 v_texCoord[];
in vec3 v_position[];
in vec3 v_normal[];

out vec2 tcs_texCoord[];
out vec3 tcs_position[];
out vec3 tcs_normal[];

void main(){
	//gl_TessLevelOuter[0] = 16;		//Shafts per Triangle
	//gl_TessLevelOuter[1] = 8;			//Segments per shaft

	//tcs_position[gl_InvocationID]		= (v_position[0] + v_position[1] + v_position[2]) / 3.0;
	//tcs_normal[gl_InvocationID]		= (v_normal[0] + v_normal[1] + v_normal[2]) / 3.0;

	gl_TessLevelOuter[0] = 1;
	gl_TessLevelOuter[1] = 1;
	gl_TessLevelOuter[2] = 1;
	gl_TessLevelInner[0] = 1;

	tcs_position[gl_InvocationID]	= v_position[gl_InvocationID];
	tcs_normal[gl_InvocationID]		= v_normal[gl_InvocationID];
	tcs_texCoord[gl_InvocationID]	= v_texCoord[gl_InvocationID];
}