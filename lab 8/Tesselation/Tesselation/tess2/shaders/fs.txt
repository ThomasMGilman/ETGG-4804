layout(binding=0) uniform sampler2DArray tex;
layout(binding=1) uniform sampler2DArray heightmap;

in float tes_shaftPct;
in vec3 tes_normal;
in vec3 tes_worldPos;
in vec2 tes_texcoord;

out vec4 color;

void main(){
	vec4 texcolor = texture(tex, vec3( tes_texcoord, 0.0 ) );
    vec3 L = normalize(lightPosition - tes_worldPos);
    vec3 N = normalize(tes_normal);
    vec3 V = normalize(eyePos-tes_worldPos);
    vec3 R = reflect(-L,N);
    float dp = max( dot(L,N), 1.0 );
    float sp = 0.0;
    if( dp > 0.0 ){
        sp = pow( max(0.0,dot(V,R)), 32.0);
    }
    
    color.rgb = dp * texcolor.rgb + vec3(sp) + vec3(0) + tes_shaftPct * vec3(1);;
    color.a = texcolor.a;
    
    
    //for debugging
    //color.rgb = texture(heightmap, vec3(tes_texcoord, 0.0) ).rgb * dp + vec3(0) + tes_shaftPct * vec3(1);
    
}
