
in vec2 tes_texCoord;
in vec3 tes_normal;
in vec3 tes_worldPos;

out vec4 color;
layout(binding = 0) uniform sampler2DArray tex;

void main(){
    
	vec4 C = texture(tex, vec3(tes_texCoord, 0, 0));
    vec3 L = normalize(lightPosition - tes_worldPos);
    vec3 N = normalize(tes_normal);

    vec3 V = normalize(eyePos - tes_worldPos);
    vec3 R = reflect(-L, N);
    float dp = max( dot(L,N), 0.0 );
    float sp = 0.0;
    if( dp > 0.0 ){
        sp = pow( max(0.0,dot(V,R)), 32.0);
    }
    color.rgb = (dp * meshColor + vec3(sp)) * C.rgb;
    color.a = C.a;
}
